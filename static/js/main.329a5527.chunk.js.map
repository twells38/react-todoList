{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","isEditing","task","handleRemove","bind","handleToggle","toggleForm","handleChange","handleUpdate","this","removeTodo","id","evt","toggleTodo","setState","preventDefault","updateTodo","target","name","value","className","onSubmit","type","onChange","completed","onClick","class","Component","NewTodoForm","handleSubmit","createTodo","uuidv4","complete","htmlFor","placeholder","TodoList","todos","createNewTodo","remove","update","toggleCompletion","newTodo","filter","t","updatedTodos","map","todo","updatedTask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.329a5527.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Todo.css\";\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      task: this.props.task\n    };\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  handleRemove() {\n    this.props.removeTodo(this.props.id);\n  }\n  handleToggle(evt) {\n    this.props.toggleTodo(this.props.id);\n  }\n  toggleForm() {\n    this.setState({\n      isEditing: !this.state.isEditing\n    });\n  }\n  handleUpdate(evt) {\n    evt.preventDefault(); //take new task data and pass it to parent\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({\n      isEditing: false\n    });\n  }\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  render() {\n    let result;\n    if (this.state.isEditing) {\n      result = (\n        <div className=\"Todo\">\n          <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\n            <input\n              type=\"text\"\n              value={this.state.task}\n              name=\"task\"\n              onChange={this.handleChange}\n            />\n            <button>save</button>\n          </form>\n        </div>\n      );\n    } else {\n      result = (\n        <div className=\"Todo\">\n          <li\n            className={\n              this.props.completed ? \"Todo-task completed\" : \"Todo-task\"\n            }\n            onClick={this.handleToggle}\n          >\n            {this.props.task}\n          </li>\n          <div className=\"Todo-button\">\n            <button onClick={this.toggleForm}>\n              <i class=\"fas fa-pen\" />\n            </button>\n            <button onClick={this.handleRemove}>\n              <i class=\"fas fa-trash\"></i>\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return result;\n  }\n}\n\nexport default Todo;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./NewToDoForm.css\";\n\nclass NewTodoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      task: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.createTodo({ ...this.state, id: uuidv4(), complete: false });\n    this.setState(state => ({ task: \"\" })); //clear form to be empty string again\n  }\n\n  render() {\n    return (\n      <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"task\"></label>\n        <input\n          key=\"\"\n          type=\"text\"\n          placeholder=\"New Todo\"\n          id=\"task\"\n          name=\"task\"\n          value={this.state.task}\n          onChange={this.handleChange}\n        />\n        <button>add Todo</button>\n      </form>\n    );\n  }\n}\n\nexport default NewTodoForm;\n","import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport \"./TodoList.css\";\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: []\n    };\n    this.createNewTodo = this.createNewTodo.bind(this);\n    this.remove = this.remove.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleCompletion = this.toggleCompletion.bind(this);\n  }\n  createNewTodo(newTodo) {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  } //then pass this method to newtodoform as a props\n\n  remove(id) {\n    this.setState({\n      todos: this.state.todos.filter(t => t.id != id)\n    });\n  }\n  toggleCompletion(id) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos });\n  }\n  update(id, updatedTask) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, task: updatedTask };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos });\n  }\n  render() {\n    const todos = this.state.todos.map(todo => {\n      return (\n        <Todo\n          key={todo.id}\n          id={todo.id}\n          task={todo.task}\n          completed={todo.completed}\n          removeTodo={this.remove}\n          toggleTodo={this.toggleCompletion}\n          updateTodo={this.update}\n        />\n      );\n    });\n    return (\n      <div className=\"TodoList\">\n        <h1>\n          Todo List <span>A simple React Project- Todo List App </span>\n        </h1>\n        <NewTodoForm createTodo={this.createNewTodo} />\n        <ul>{todos}</ul>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport TodoList from \"./TodoList\";\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}